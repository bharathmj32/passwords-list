{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bharath\\\\Desktop\\\\Internship\\\\passwords-list\\\\src\\\\components\\\\PassList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PassForm from './PassForm';\nimport Pass from './Pass'; // const getLocalItems = () => {\n//   let list =  localStorage.getItem('lists');\n//   console.log(list);\n//   if(list){\n//     return JSON.parse(localStorage.getItem('lists'));\n//   }\n//   else\n//     return []\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PassList() {\n  _s();\n\n  const [passes, setPass] = useState([]); // getLocalItems()\n  // const idd= useRef(1);\n\n  const addPass = pass => {\n    if (!pass.text || /^\\s*$/.test(pass.text)) return;\n    const newPass = [pass, ...passes];\n    setPass(newPass);\n    console.log(...passes);\n  };\n\n  const updatePass = newValue => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) return;\n    setPass(prev => prev.map(item => item.id === newValue.id ? newValue : item));\n  };\n\n  const removePass = id => {\n    const removedArr = [...passes].filter(pass => pass.id !== id);\n    setPass(removedArr);\n  }; // useEffect(\n  //   localStorage.setItem(idd.current++,JSON.stringify(passes))\n  // ,[passes])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"A storage space for all your passwords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pass, {\n      passes: passes,\n      removePass: removePass,\n      updatePass: updatePass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PassForm, {\n      onSubmit: addPass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PassList, \"zE3u+huvIQS03AqIZbPTejmW8c4=\");\n\n_c = PassList;\nexport default PassList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PassList\");","map":{"version":3,"sources":["C:/Users/Bharath/Desktop/Internship/passwords-list/src/components/PassList.js"],"names":["React","useState","useEffect","useRef","PassForm","Pass","PassList","passes","setPass","addPass","pass","text","test","newPass","console","log","updatePass","newValue","prev","map","item","id","removePass","removedArr","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADkB,CAElB;AACA;;AAEA,QAAMQ,OAAO,GAAGC,IAAI,IAAI;AACtB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AAE3C,UAAME,OAAO,GAAG,CAACH,IAAD,EAAO,GAAGH,MAAV,CAAhB;AACAC,IAAAA,OAAO,CAACK,OAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGR,MAAf;AACD,GAND;;AAQA,QAAMS,UAAU,GAAGC,QAAQ,IAAI;AAC7B,QAAI,CAACA,QAAQ,CAACN,IAAV,IAAkB,QAAQC,IAAR,CAAaK,QAAQ,CAACN,IAAtB,CAAtB,EAAqD;AACrDH,IAAAA,OAAO,CAACU,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYJ,QAAQ,CAACI,EAArB,GAA0BJ,QAA1B,GAAqCG,IAAvD,CAAT,CAAP;AACD,GAHD;;AAKA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACvB,UAAME,UAAU,GAAG,CAAC,GAAGhB,MAAJ,EAAYiB,MAAZ,CAAmBd,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYA,EAAvC,CAAnB;AACAb,IAAAA,OAAO,CAACe,UAAD,CAAP;AACD,GAHD,CAlBkB,CAyBlB;AACA;AACA;;;AAGA,sBACE;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEhB,MAAd;AAAsB,MAAA,UAAU,EAAEe,UAAlC;AAA+C,MAAA,UAAU,EAAEN;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GArCQH,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useState , useEffect, useRef} from 'react';\nimport PassForm from './PassForm';\nimport Pass from './Pass';\n\n// const getLocalItems = () => {\n//   let list =  localStorage.getItem('lists');\n//   console.log(list);\n//   if(list){\n//     return JSON.parse(localStorage.getItem('lists'));\n//   }\n//   else\n//     return []\n// }\n\nfunction PassList() {\n  const [passes, setPass] = useState([]);\n  // getLocalItems()\n  // const idd= useRef(1);\n\n  const addPass = pass => {\n    if (!pass.text || /^\\s*$/.test(pass.text)) return;\n  \n    const newPass = [pass, ...passes];\n    setPass(newPass);\n    console.log(...passes);\n  };\n\n  const updatePass = newValue => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text))   return;\n    setPass(prev => prev.map(item => (item.id === newValue.id ? newValue : item)));\n  };\n\n  const removePass = id => {\n    const removedArr = [...passes].filter(pass => pass.id !== id);\n    setPass(removedArr);\n  };\n\n  \n  \n  // useEffect(\n  //   localStorage.setItem(idd.current++,JSON.stringify(passes))\n  // ,[passes])\n\n\n  return (\n    <>\n      <h1 id='title'>A storage space for all your passwords</h1>\n      <Pass passes={passes} removePass={removePass}  updatePass={updatePass} />\n      <PassForm onSubmit={addPass} />\n    </>\n  );\n}\n\nexport default PassList;\n"]},"metadata":{},"sourceType":"module"}