{"version":3,"sources":["components/PassForm.js","components/Pass.js","components/PassList.js","App.js","index.js"],"names":["PassForm","props","useState","id","value","uname","pass","input","setInput","istoggle","settoggle","idd","useRef","handleSubmit","e","preventDefault","onSubmit","current","text","className","placeholder","onChange","target","name","onClick","Pass","passes","removePass","updatePass","unam","pas","edit","setEdit","tog","map","PassList","setPass","removedArr","filter","newValue","test","prev","item","newPass","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a38b27b.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction PassForm(props) {\n  const [input, setInput] = useState({ id: null, value: '', uname:'', pass:''});\n  const [istoggle,settoggle]=useState(false)\n  const idd = useRef(0)\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({id: idd.current++, text: input.value, uname: input.uname, pass: input.pass});\n    setInput({id:null, value:'',uname:'',pass:''});\n    settoggle(false)\n  };\n\n  if (istoggle===true){\n   return <>\n   <form onSubmit={handleSubmit} className='pass-form'>\n      <div className='form'>\n      <input placeholder='Name of site' value={input.value} onChange={(e)=>setInput({ id: input.id, value: e.target.value, uname : input.uname , pass: input.pass})} name='text' className='pass-input' />\n      <input placeholder='Enter Username' value={input.uname} onChange={(e)=>setInput({ id: input.id, value: input.value, uname : e.target.uname , pass: input.pass})} name='text' className='pass-input'/>\n      <input placeholder='Enter Password' value={input.pass} onChange={(e)=>setInput({ id: input.id, value: input.value, uname : input.uname , pass: e.target.pass})} name='text' className='pass-input' />\n      <button onClick={handleSubmit} className='pass-button'>Submit</button>\n    </div>\n    </form>\n    </>\n  }   \n\n  return (\n   <button onClick={()=>settoggle(true)}  className='pass-button'>add new</button>\n  );\n}\n\nexport default PassForm;\n","import React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport  { IoIosArrowDropup, IoIosArrowDropdown} from 'react-icons/io'\n\n\nconst Pass = ({ passes, removePass, updatePass }) => {\n  const [edit, setEdit] = useState({ id: null, value: '', unam:'', pas:''});\n  const [istoggle,settoggle]=useState({id: null, tog: false})\n \n  const submitUpdate = e => {\n          e.preventDefault();\n          updatePass({id:edit.id, text:edit.value, uname:edit.unam, pass:edit.pas});\n          setEdit({id: null, value: '' ,unam:'' ,pas:''});   \n  };\n \n  \n  if (edit.id) {\n    return <><div className='form'>\n      <input placeholder='Name of site' value={edit.value} onChange={(e)=>setEdit({ id: edit.id, value: e.target.value, unam : edit.unam , pas: edit.pas})} name='text' className='pass-input'  />\n      <input placeholder='Enter Username' value={edit.unam} onChange={(e)=>setEdit({ id: edit.id, value: edit.value, unam : e.target.value , pas: edit.pas})} name='text' className='pass-input'  />\n      <input placeholder='Enter Password' value={edit.pas} onChange={(e)=>setEdit({ id: edit.id, value: edit.value, unam : edit.unam , pas: e.target.value})} name='text' className='pass-input'  />\n      <button onClick={submitUpdate} className='pass-button'>Update</button>\n    </div>\n    </>\n  }\n\n \n  return (\n    <div className='scroll-div' >\n    {  \n    passes.map((pass) => (\n     <div className='one-row'>\n        <strong>. {pass.text}</strong>  \n      <div className='icons-div'>\n          <RiCloseCircleLine onClick={() => removePass(pass.id)} className='delete-icon' />\n          <TiEdit onClick={() => setEdit({ id: pass.id, value: pass.text, unam : pass.uname , pas: pass.pass})}  className='edit-icon'  />\n          {istoggle.tog & istoggle.id === pass.id?\n                <>\n                  <IoIosArrowDropup onClick={()=>settoggle({id:pass.id,tog:false})} className='drop-icon'/>  \n                  <div className='drop-text'>                  \n                    UserName: {pass.uname}   \n                    <br/> Password: {pass.pass}\n                  </div>\n                </>    \n            :\n                 <IoIosArrowDropdown onClick={()=>settoggle({id:pass.id,tog:true})} />\n            }\n          <br/><br/>\n      </div>\n     </div>\n  ))\n  }\n  </div>\n  );\n  \n\n};\n\nexport default Pass;\n","import React, { useState , useEffect, useRef} from 'react';\nimport PassForm from './PassForm';\nimport Pass from './Pass';\n\n// const getLocalItems = () => {\n//   let list =  localStorage.getItem('lists');\n//   console.log(list);\n//   if(list){\n//     return JSON.parse(localStorage.getItem('lists'));\n//   }\n//   else\n//     return []\n// }\n\nfunction PassList() {\n  const [passes, setPass] = useState([]);\n  // getLocalItems()\n  // const idd= useRef(1);\n\n  const addPass = pass => {\n    if (!pass.text || /^\\s*$/.test(pass.text)) return;\n  \n    const newPass = [pass, ...passes];\n    setPass(newPass);\n    console.log(...passes);\n  };\n\n  const updatePass = newValue => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text))   return;\n    setPass(prev => prev.map(item => (item.id === newValue.id ? newValue : item)));\n  };\n\n  const removePass = id => {\n    const removedArr = [...passes].filter(pass => pass.id !== id);\n    setPass(removedArr);\n  };\n\n  \n  \n  // useEffect(\n  //   localStorage.setItem(idd.current++,JSON.stringify(passes))\n  // ,[passes])\n\n\n  return (\n    <>\n      <h1 id='title'>A storage space for all your passwords</h1>\n      <Pass passes={passes} removePass={removePass}  updatePass={updatePass} />\n      <PassForm onSubmit={addPass} />\n    </>\n  );\n}\n\nexport default PassList;\n","import React from 'react'\nimport './App.css';\nimport PassList from './components/PassList';\n\n\nfunction App() {\n  return (\n    <div>\n      <center className='cover'>\n      <PassList />\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode><App /> </React.StrictMode>, document.getElementById('root'));\n\n"],"sourceRoot":""}